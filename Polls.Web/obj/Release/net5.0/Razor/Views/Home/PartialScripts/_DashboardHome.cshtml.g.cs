#pragma checksum "E:\Projects\Graduation Project\Polls-Students-\Polls.Web\Views\Home\PartialScripts\_DashboardHome.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "645a474e7e09b67233fc10cde3ab7b0905611ec4af20c18ba84aad7b073aff8d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_PartialScripts__DashboardHome), @"mvc.1.0.view", @"/Views/Home/PartialScripts/_DashboardHome.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Projects\Graduation Project\Polls-Students-\Polls.Web\Views\_ViewImports.cshtml"
using Polls.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"645a474e7e09b67233fc10cde3ab7b0905611ec4af20c18ba84aad7b073aff8d", @"/Views/Home/PartialScripts/_DashboardHome.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"9d53f53c9feea446876f93f5d825edaa3f77113707f00cbc425c09e010d5128d", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_PartialScripts__DashboardHome : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script>
    $(document).ready(function() {

        pieChart(0, 0, 0);
        barChart(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

        $.ajax({
            url: '/api/Questions/GetQuestionsStats',
            dataType: 'json',
            type: 'get',
            success: function(result) {
                $(""#can2"").empty().append(`<canvas class=""m-3 mb-5"" id=""pie""></canvas>`);
                pieChart(result.badPercentage, result.goodPercentage, result.veryGoodPercentage);
            },
            error : function(){
                alert(""Error"");
            }
        });

        GetQuestionsStatsInCourse($(""#growthReportId"").data(""id""));

    });

    $("".down"").click(function() {
        var id = $(this).data(""id"");
        var name = $(this).data(""name"");
        GetQuestionsStatsInCourse(id);
        $(""#growthReportId"").empty().append(name);
    });
</script>
<script type=""text/javascript"">

    function barChart(jun, feb, mar, apr, may, june, jul, aug, sept, oct, n");
            WriteLiteral(@"ov, dec) {
        var barChart = document.getElementById('bar').getContext('2d');
        var mybarChart = new Chart(barChart, {
            type: 'bar', 
            data: {
                labels:['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Bad',
                    data:[jun.badPercentage, feb.badPercentage, mar.badPercentage, apr.badPercentage, may.badPercentage, june.badPercentage, jul.badPercentage, aug.badPercentage, sept.badPercentage, oct.badPercentage, nov.badPercentage, dec.badPercentage],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                    ],
                    borderWidth: 1
                },
                {
                    label: 'Good',
                    data:[jun.goodPerce");
            WriteLiteral(@"ntage, feb.goodPercentage, mar.goodPercentage, apr.goodPercentage, may.goodPercentage, june.goodPercentage, jul.goodPercentage, aug.goodPercentage, sept.goodPercentage, oct.goodPercentage, nov.goodPercentage, dec.goodPercentage],
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.5)',

                    ],
                    borderColor: [
                        'rgba(75, 192, 192)',
                    ],
                    borderWidth: 1
                },
                {
                    label: 'Very Good',
                    data:[jun.veryGoodPercentage, feb.veryGoodPercentage, mar.veryGoodPercentage, apr.veryGoodPercentage, may.veryGoodPercentage, june.veryGoodPercentage, jul.veryGoodPercentage, aug.veryGoodPercentage, sept.veryGoodPercentage, oct.veryGoodPercentage, nov.veryGoodPercentage, dec.veryGoodPercentage],
                    backgroundColor: [
                        'rgba(153, 102, 255, 0.5)',

                    ],
               ");
            WriteLiteral(@"     borderColor: [
                        'rgba(153, 102, 255)',
                    ],
                    borderWidth: 1,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks:{
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    }

    function pieChart(bad, good, veryGood){
        var pieChart = document.getElementById('pie').getContext('2d');
        var mypieChart = new Chart(pieChart, {
            type: 'pie', 
            data: {
                labels:['Bad', 'Good', 'Very Good'],
                datasets: [{
                    label: 'Bad',
                    data:[bad, good, veryGood],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(153, 102, 255, 0.5)',

         ");
            WriteLiteral(@"           ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgba(75, 192, 192)',
                        'rgba(153, 102, 255)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks:{
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    }

    function GetQuestionsStatsInCourse(courseId) {
        $.ajax({
            url: '/api/Questions/GetQuestionsStats/' + courseId,
            type: 'get',
            dataType: 'json',
            success: function(result) {
                $(""#can"").empty().append(`<canvas class=""m-3"" id=""bar""></canvas>`);
                barChart(result[0], result[1], result[2], result[3], result[4], result[5], result[6], result[7], result[8], result[9], result[10], re");
            WriteLiteral("sult[11],)\r\n            },\r\n            error: function() { \r\n                alert(\"error\");\r\n            }\r\n        });\r\n    }\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
